g2 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for gypsum variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% gypsum_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% gypsum_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g3 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for calcite variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% calcite_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% calcite_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g4 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
lst_p = list(g1, g2, g3, g4)
glist = lapply(lst_p, ggplotGrob)
pdf("sobol_for_fctn_vars.pdf",width=11,height=8)
marrangeGrob(grobs=glist, nrow=1, ncol=1)
dev.off()
# Editing figures together for paper:
g1 = g1 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g2 = g2 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g3 = g3 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
g4 = g4 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
grid.arrange(g1, g2, g3, g4, nrow = 2)
grid.arrange(g1, g2, nrow = 1)
###############################################################################
### Script to make boxplots from bootstrap Sobol' indices data.
## Author: Alexander C. Murph
## Date: January 2024
## Let's make some box-plots :)
library(ggplot2)
library(reshape)
library(latex2exp)
library(gridExtra)
setwd("~/GitLab/sa_for_chemistry/sobol_indices")
###############################################################################
###############################################################################
###############################################################################
####### Graphs for the non-functional variables.
sobol_data_for_nonfctn = NULL
seed_data_for_nonfctn  = NULL
for(file_name in list.files('bootstrap_data_nonfctn')){
temp_data              = read.csv(paste('bootstrap_data_nonfctn/', file_name, sep = ''))
temp_data$X            = NULL
split_string = unlist(strsplit(file_name, '__'))
if(split_string[1] == 'seed_variable'){
temp_data$output_var   = split_string[2]
seed_data_for_nonfctn  = rbind(seed_data_for_nonfctn, temp_data)
} else {
sobol_data_for_nonfctn = rbind(sobol_data_for_nonfctn, temp_data)
}
}
new_names = c("dfn_seed",                   "curr_inflow_rate",           "curr_diffusion_coef",        "curr_porosity",              "curr_gypsum_rate_constant",
"curr_calcite_rate_constant", "curr_gypsum_surface_area",   "curr_calcite_surface_area",  "dfn_p32",                    "dfn_volume",
"backbone_volume",            "backbone_p32",               "final_gypsum",               "final_calcite",              "Pe",
"Da_1_gypsum",                "Da_2_gypsum",                "Da_1_calcite",               "Da_2_calcite",               "tau",
"calcite_flush_0_nondim",     "gypsum_flush_0_nondim",      "calcite_flush_1_nondim",     "gypsum_flush_1_nondim",      "calcite_flush_2_nondim",
"gypsum_flush_2_nondim",      "calcite_flush_3_nondim",     "gypsum_flush_3_nondim",      "calcite_flush_4_nondim",     "gypsum_flush_4_nondim",
"calcite_flush_5_nondim",     "gypsum_flush_5_nondim",      "calcite_flush_6_nondim",     "gypsum_flush_6_nondim",      "calcite_flush_7_nondim",
"gypsum_flush_7_nondim",      "calcite_flush_8_nondim",     "gypsum_flush_8_nondim",      "calcite_flush_9_nondim",     "gypsum_flush_9_nondim",
"calcite_flush_10_nondim",    "gypsum_flush_10_nondim",     "calcite_flush_11_nondim",    "gypsum_flush_11_nondim",     "calcite_flush_12_nondim",
"gypsum_flush_12_nondim")
gypsum_outputs  = c("gypsum_flush_0_nondim", "gypsum_flush_1_nondim",
"gypsum_flush_2_nondim", "gypsum_flush_3_nondim", "gypsum_flush_4_nondim",
"gypsum_flush_5_nondim", "gypsum_flush_6_nondim",
"gypsum_flush_7_nondim", "gypsum_flush_8_nondim", "gypsum_flush_9_nondim",
"gypsum_flush_10_nondim", "gypsum_flush_11_nondim",
"gypsum_flush_12_nondim")
outputs_abrv    = c("flush_0", "flush_1",
"flush_2", "flush_3", "flush_4",
"flush_5", "flush_6",
"flush_7", "flush_8", "flush_9",
"flush_10", "flush_11",
"flush_12")
calcite_outputs = c("calcite_flush_0_nondim",      "calcite_flush_1_nondim",
"calcite_flush_2_nondim",
"calcite_flush_3_nondim",     "calcite_flush_4_nondim",
"calcite_flush_5_nondim",     "calcite_flush_6_nondim",
"calcite_flush_7_nondim",
"calcite_flush_8_nondim",     "calcite_flush_9_nondim",
"calcite_flush_10_nondim",    "calcite_flush_11_nondim",  "calcite_flush_12_nondim")
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for gypsum variables:
bootstrapped_FOmean            = sobol_data_for_nonfctn[which((sobol_data_for_nonfctn$sobol_type == 'FOmean')&(sobol_data_for_nonfctn$output_var %in% gypsum_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g1 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1)) + labs(fill="Flush Time")
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for calcite variables:
bootstrapped_FOmean            = sobol_data_for_nonfctn[which((sobol_data_for_nonfctn$sobol_type == 'FOmean')&(sobol_data_for_nonfctn$output_var %in% calcite_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id. = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g2 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1)) + labs(fill="Flush Time")
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for gypsum variables:
bootstrapped_TEmean            = sobol_data_for_nonfctn[which((sobol_data_for_nonfctn$sobol_type == 'TEmean')&(sobol_data_for_nonfctn$output_var %in% gypsum_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_nonfctn[(seed_data_for_nonfctn$output_var %in% gypsum_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g3 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1)) + labs(fill="Flush Time")
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for calcite variables:
bootstrapped_TEmean            = sobol_data_for_nonfctn[which((sobol_data_for_nonfctn$sobol_type == 'TEmean')&(sobol_data_for_nonfctn$output_var %in% calcite_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_nonfctn[(seed_data_for_nonfctn$output_var %in% calcite_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g4 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1)) + labs(fill="Flush Time")
lst_p = list(g1, g2, g3, g4)
glist = lapply(lst_p, ggplotGrob)
pdf("sobol_for_nonfctn_vars.pdf",width=11,height=8)
marrangeGrob(grobs=glist, nrow=1, ncol=1)
dev.off()
# Editing figures together for paper:
g1 = g1 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g2 = g2 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g3 = g3 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
g4 = g4 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
grid.arrange(g1, g2, g3, g4, nrow = 2)
grid.arrange(g1, g3, nrow = 1, top = "Sobol' Indices for Gypsum Dissolution at Different Flush Times")
grid.arrange(g2, g4, nrow = 1, top = "Sobol' Indices for Calcite Precipitation at Different Flush Times")
grid.arrange(g1, g3, nrow = 1, top = textGrob("Sobol' Indices for Gypsum Dissolution at Different Flush Times", gp=gpar(fontsize=15,font=8)) )
library(grid)
grid.arrange(g1, g3, nrow = 1, top = textGrob("Sobol' Indices for Gypsum Dissolution at Different Flush Times", gp=gpar(fontsize=15,font=8)) )
grid.arrange(g2, g4, nrow = 1, top = textGrob("Sobol' Indices for Calcite Precipitation at Different Flush Times", gp=gpar(fontsize=15,font=8)))
sobol_data_for_fctn = NULL
seed_data_for_fctn  = NULL
for(file_name in list.files('bootstrap_data_fctn')){
temp_data              = read.csv(paste('bootstrap_data_fctn/', file_name, sep = ''))
temp_data$X            = NULL
split_string = unlist(strsplit(file_name, '__'))
if(split_string[1] == 'seed_variable'){
temp_data$output_var   = split_string[2]
seed_data_for_fctn  = rbind(seed_data_for_fctn, temp_data)
} else {
sobol_data_for_fctn = rbind(sobol_data_for_fctn, temp_data)
}
}
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for gypsum variables:
bootstrapped_FOmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'FOmean')&
(sobol_data_for_fctn$output_var %in% gypsum_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g1 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for calcite variables:
bootstrapped_FOmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'FOmean')&
(sobol_data_for_fctn$output_var %in% calcite_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id. = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g2 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for gypsum variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% gypsum_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% gypsum_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g3 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for calcite variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% calcite_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% calcite_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g4 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
lst_p = list(g1, g2, g3, g4)
glist = lapply(lst_p, ggplotGrob)
pdf("sobol_for_fctn_vars.pdf",width=11,height=8)
marrangeGrob(grobs=glist, nrow=1, ncol=1)
dev.off()
# Editing figures together for paper:
g1 = g1 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g2 = g2 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)")) )
g3 = g3 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
g4 = g4 + scale_x_discrete(labels = TeX(c('curr_inflow_rate' = r"(Q)",
'curr_diffusion_coef' = r"(D)",
'curr_porosity' = r"($\phi$)",
'curr_gypsum_rate_constant' = r"($k_{gyp.}$)",
'curr_calcite_rate_constant' = r"($k_{cal.}$)",
'curr_gypsum_surface_area' = r"(Gyp. SA)",
'curr_calcite_surface_area' = r"(Cal. SA)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
grid.arrange(g1, g3, nrow = 1, top = textGrob("Sobol' Indices for Gypsum Dissolution at Different Flush Times for Functional Variables", gp=gpar(fontsize=15,font=8)) )
grid.arrange(g2, g4, nrow = 1, top = textGrob("Sobol' Indices for Calcite Precipitation at Different Flush Times for Functional Variables", gp=gpar(fontsize=15,font=8)))
# ###############################################################################
# ###############################################################################
# ###############################################################################
# Functional Variables
sobol_data_for_fctn = NULL
seed_data_for_fctn  = NULL
for(file_name in list.files('bootstrap_data_fctn')){
temp_data              = read.csv(paste('bootstrap_data_fctn/', file_name, sep = ''))
temp_data$X            = NULL
split_string = unlist(strsplit(file_name, '__'))
if(split_string[1] == 'seed_variable'){
temp_data$output_var   = split_string[2]
seed_data_for_fctn  = rbind(seed_data_for_fctn, temp_data)
} else {
sobol_data_for_fctn = rbind(sobol_data_for_fctn, temp_data)
}
}
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for gypsum variables:
bootstrapped_FOmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'FOmean')&
(sobol_data_for_fctn$output_var %in% gypsum_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g1 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# First Order Indices on the Mean Response GP, for calcite variables:
bootstrapped_FOmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'FOmean')&
(sobol_data_for_fctn$output_var %in% calcite_outputs)),]
bootstrapped_FOmean$boot_num   = NULL
bootstrapped_FOmean$sobol_type = NULL
graph_data                     = melt(bootstrapped_FOmean, id. = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g2 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nFirst-Order Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for gypsum variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% gypsum_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% gypsum_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = gypsum_outputs)
levels(graph_data$output_var)  = outputs_abrv
g3 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# Total-Effect Indices on the Mean Response GP, for calcite variables:
bootstrapped_TEmean            = sobol_data_for_fctn[which((sobol_data_for_fctn$sobol_type == 'TEmean')&
(sobol_data_for_fctn$output_var %in% calcite_outputs)),]
bootstrapped_TEmean$boot_num   = NULL
bootstrapped_TEmean$sobol_type = NULL
bootstrapped_seed              = seed_data_for_fctn[(seed_data_for_fctn$output_var %in% calcite_outputs),]
bootstrapped_TEmean$epsilon    = bootstrapped_seed$TEseed
graph_data                     = melt(bootstrapped_TEmean, id = "output_var")
graph_data$output_var          = factor(graph_data$output_var, levels = calcite_outputs)
levels(graph_data$output_var)  = outputs_abrv
g4 = ggplot(graph_data, aes(x = variable, y = value, fill = output_var)) + geom_boxplot(lwd=0.25, outlier.size = 0.2) +
ggtitle(TeX("")) +
theme_bw() +
xlab("Simulation QoI") +
ylab("Monte Carlo Samples of \nTotal-Effect Sobol' Index") +
theme(axis.text=element_text(size=15), axis.title = element_text(size = 15), plot.title = element_text(size = 15)) +
theme(axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
lst_p = list(g1, g2, g3, g4)
glist = lapply(lst_p, ggplotGrob)
pdf("sobol_for_fctn_vars.pdf",width=11,height=8)
marrangeGrob(grobs=glist, nrow=1, ncol=1)
dev.off()
# Editing figures together for paper:
g1 = g1 + scale_x_discrete(labels = TeX(c('Pe' = r"(Pe)",
'Da_1_gypsum' = r"($Da_{I}$ Gyp.)",
'Da_2_gypsum' = r"($Da_{II}$ Gyp.)",
'Da_1_calcite' = r"($Da_{I}$ Cal.)",
'Da_2_calcite' = r"($Da_{II}$ Cal.)",
'tau' = r"($\tau$)",
'dfn_volume' = r"(dfn vol.)")) )
g2 = g2 + scale_x_discrete(labels = TeX(c('Pe' = r"(Pe)",
'Da_1_gypsum' = r"($Da_{I}$ Gyp.)",
'Da_2_gypsum' = r"($Da_{II}$ Gyp.)",
'Da_1_calcite' = r"($Da_{I}$ Cal.)",
'Da_2_calcite' = r"($Da_{II}$ Cal.)",
'tau' = r"($\tau$)",
'dfn_volume' = r"(dfn vol.)")) )
g3 = g3 + scale_x_discrete(labels = TeX(c('Pe' = r"(Pe)",
'Da_1_gypsum' = r"($Da_{I}$ Gyp.)",
'Da_2_gypsum' = r"($Da_{II}$ Gyp.)",
'Da_1_calcite' = r"($Da_{I}$ Cal.)",
'Da_2_calcite' = r"($Da_{II}$ Cal.)",
'tau' = r"($\tau$)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
g4 = g4 + scale_x_discrete(labels = TeX(c('Pe' = r"(Pe)",
'Da_1_gypsum' = r"($Da_{I}$ Gyp.)",
'Da_2_gypsum' = r"($Da_{II}$ Gyp.)",
'Da_1_calcite' = r"($Da_{I}$ Cal.)",
'Da_2_calcite' = r"($Da_{II}$ Cal.)",
'tau' = r"($\tau$)",
'dfn_volume' = r"(dfn vol.)",
'epsilon' = r"($\epsilon$)")) )
grid.arrange(g1, g3, nrow = 1, top = textGrob("Sobol' Indices for Gypsum Dissolution at Different Flush Times for Functional Variables", gp=gpar(fontsize=15,font=8)) )
grid.arrange(g2, g4, nrow = 1, top = textGrob("Sobol' Indices for Calcite Precipitation at Different Flush Times for Functional Variables", gp=gpar(fontsize=15,font=8)))
